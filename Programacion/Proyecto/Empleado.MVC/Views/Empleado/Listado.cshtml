<html>

<head>
    <title>Empleado - Listado de personal</title>
</head>

<body onload="iniciarPagina()">
    <div>
        <h2>Listado de personal</h2>
        <br>
        <br>
        <a href="/Empleado/Registro">Agregar Empleado</a>
        <br>
        <br>
        <table id="tablaempleado" style="width: 100%;">
            <thead>
                <tr>
                    <th>
                        Id Empleado
                    </th>
                    <th>
                        Nombre
                    </th>
                    <th>
                        Puesto
                    </th>
                    <th>
                        Telefono
                    </th>
                    <th>
                        Correo
                    </th>
                    <th>
                        Editar
                    </th>
                    <th>
                        Eliminar
                    </th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
    <script>
        function iniciarPagina(){
            cargarListado();
        }
        function cargarListado(){
            // 1.- Obtener la lista 
            // [{Empleado a}, {Empleado b}, {Empleado c}] --> httpGet
            var requestOptions = {
                method: 'GET',
                redirect: 'follow'
            };

            fetch("https://localhost:5003/empleados", requestOptions)
            .then(response =>{
                console.log(response);
                return response.json();
                
            })
            .then(result => {
                console.log(result);
                // 1.1 Si la peticion fue correcta 
                // 1.1.1 Buscar el elemento html table
                const tabla = document.getElementById("tablaempleado");
                const tbody = tabla.querySelectorAll("tbody")[0];
                // Limpiar el tbody de la tabla
                tbody.innerHTML = " ";
                // 1.1.2 Iteramos el arreglo de empleados
                for(let i = 0; i < result.length; i++){
                    // 1.1.2.1 Por cada iteracion crear una fila en la tabla <tr>
                    const tr = document.createElement("tr")
                    tbody.appendChild(tr);

                    let td = null;
                    let a = null;
                    // 1.1.2.2 Por cada propiedad del elemento empleado crea un td 
                    // 1.1.2.2.1 Para la propiedad idEmpleado crea un td, agregar el valor de la propiedad al td y agregar al td al tr que se esta creando
                    td = document.createElement("td");
                    td.textContent = result[i].idEmpleado;
                    tr.appendChild(td);
                    // 1.1.2.2.2 Para la propiedad Nombre crea un td, agregar el valor de la propiedad al td y agregar al td al tr que se esta creando
                    td = document.createElement("td");
                    td.textContent = result[i].nombre + ' ' + result[i].apellidoPaterno + ' ' + result[i].apellidoMaterno;
                    tr.appendChild(td);
                    // 1.1.2.2.3 Para la propiedad Puesto crea un td, agregar el valor de la propiedad al td y agregar al td al tr que se esta creando
                    td = document.createElement("td");
                    td.textContent = result[i].puesto;
                    tr.appendChild(td);
                    // 1.1.2.2.4 Para la propiedad Telefono crea un td, agregar el valor de la propiedad al td y agregar al td al tr que se esta creando
                    td = document.createElement("td");
                    td.textContent = result[i].telefono;
                    tr.appendChild(td);
                    // 1.1.2.2.5 Para la propiedad Correo crea un td, agregar el valor de la propiedad al td y agregar al td al tr que se esta creando
                    td = document.createElement("td");
                    td.textContent = result[i].correoElectronico;
                    tr.appendChild(td);
                    // 1.1.2.2.6 Para el Editar crear un td, crear anchor y agregar el href /Empleado/Editar + idEmpleado
                    td = document.createElement("td");
                    a = document.createElement("a");
                    a.href = "/Empleado/Editar/" + result[i].idEmpleado;
                    a.textContent = "Editar";
                    td.appendChild(a);
                    tr.appendChild(td);
                    // 1.1.2.2.7 Para el Eliminar crear un td, crear anchor y agregar el href /Empleado/Eliminar + idEmpleado
                    td = document.createElement("td");
                    a = document.createElement("a");
                    a.href = "javascript:eliminar(" + result[i].idEmpleado + ")";
                    a.textContent = "Eliminar";
                    td.appendChild(a);
                    tr.appendChild(td);
                }
            })
            .catch(error => {
                // 1.2 Si la peticion no fue correcta 
                // 1.2.1 Enviar el mensaje de error al momento de realizar la consulta de empleados
                alert("Error al momento de realizar la petición, contacte al administrador");
                console.log(error);
            });
        }
        function eliminar(idEmpleado){
                // 1.- Inicio
                // 2.- Recibimos parametro de entrada idEmpleado
                // 3.- Confirmar que se desea eliminar
                let Eliminar = confirm("¿Esta seguro que desea eliminar el empleado?");
                // 3.1.- Si la respuesta es si
                if(Eliminar == true)
                {
                    // 3.1.1.- Eliminar el empleado a traves de servicio de eliminar
                    var requestOptions = {
                    method: 'DELETE',
                    redirect: 'follow'
                    };
                    var url = "https://localhost:5003/empleados/" + idEmpleado;

                    fetch(url, requestOptions)
                    .then(response => response.json())
                    .then(result => {
                        // 3.1.1.1.- Si se elimino correctamente
                        // 3.1.1.2.- Actualizar lista de empleados
                        console.log("El empleado se elimino correctamente");
                        cargarListado();
                        // let actualizado = cargarListado();
                        //return actualizado;
                        //location.reload(cargarListado());
                    })
                    .catch(error => {
                        // 3.1.1.2.- Si no se elimino correctamente
                        // 3.1.1.2.1.- Informar que no se elimino correctamente
                        console.log('error', error)
                        alert("Hubo un error al eliminar el empleado, contacte al administrador del sistema");
                    });
                    // 3.1.2.- Actualizar lista de empleados
                }else
                // 3.2.- Si la respuesta es no 
                {
                    // 3.2.1.- Cancelar operación y salir
                    return;
                }
                // 4.- Fin
            }
    </script>
</body>
</html>